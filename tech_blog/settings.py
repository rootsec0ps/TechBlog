"""
Django settings for tech_blog project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config
from dotenv import load_dotenv, find_dotenv
load_dotenv(find_dotenv())
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Added code by me to see if this will work on Vercel for loading static files
#STATICFILES_DIRS = [BASE_DIR/'blog'/'static',]
#STATIC_ROOT = BASE_DIR/'blog'/'static'

STATIC_ROOT = os.path.join(BASE_DIR, "blog", "staticfiles") 
STATIC_URL = "/blog/static/"
STATICFILES_DIRS = [os.path.join(BASE_DIR, "blog", "static")]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = os.environ['SECRET_KEY']
SECRET_KEY = os.getenv('SECRET_KEY') if "SECRET_KEY" in os.environ["SECRET_KEY"] else config("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = os.environ['DEBUG'] == 'True'
DEBUG = True

ALLOWED_HOSTS = ['.localhost', '.127.0.0.1', '.vercel.app', '.now.sh',]


# Application definition

INSTALLED_APPS = [
    'blog.apps.BlogConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tech_blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tech_blog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': BASE_DIR / 'db.sqlite3',
#    }
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        
        #'NAME': os.environ['DB_NAME'],
        #'USER': os.environ['DB_USER'],
        #'PASSWORD': os.environ['DB_PASSWORD'],
        #'HOST': os.environ['DB_HOST'],
        #'PORT': os.environ['DB_PORT'],

        # TEST CODE for VERCEL
        'NAME': os.getenv('DB_NAME') if "DB_NAME" in os.environ["DB_NAME"] else config("DB_NAME"),
        'USER': os.getenv('DB_USER') if "DB_USER" in os.environ["DB_USER"] else config("DB_USER"),
        'PASSWORD': os.getenv('DB_PASSWORD') if "DB_PASSWORD" in os.environ["DB_PASSWORD"] else config("DB_PASSWORD"),
        'HOST': os.getenv('DB_HOST') if "DB_HOST" in os.environ["DB_HOST"] else config("DB_HOST"),
        'PORT': os.getenv('DB_PORT') if "DB_PORT" in os.environ["DB_PORT"] else config("DB_PORT"),
        
        #'NAME': 'postgres',
        #'USER': 'postgres',
        #'PASSWORD': [SEE .env FILE],
        #'HOST': 'db.kixrgjcpnzawkbtrxnvd.supabase.co',
        #'PORT': '6543',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Amsterdam'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
